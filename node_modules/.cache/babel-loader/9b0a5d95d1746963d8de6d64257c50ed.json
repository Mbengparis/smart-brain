{"ast":null,"code":"var _jsxFileName = \"/Users/mbeng/Documents/Complete Web Developer/React/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: 'd5dce337ce2f404fad71e20b1fcdf405'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 900,\n        size: {\n          value: 5,\n          random: true\n        }\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displaFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmitButton = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displaFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err, 'Oooooops try again'));\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmitButton: this.onSubmitButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      loadUser: this.loadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mbeng/Documents/Complete Web Developer/React/smart-brain/src/App.js"],"names":["React","Component","Navigation","Logo","SignIn","Register","ImageLinkForm","Rank","FaceRecognition","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","size","random","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","onRouteChange","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displaFaceBox","onInputChange","event","target","onSubmitButton","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\n\n\n\nconst app = new Clarifai.App({\n  apiKey: 'd5dce337ce2f404fad71e20b1fcdf405'\n});\n\nconst particlesOptions = {\n    particles: {\n      number: {\n       value:100,\n       density:{\n         enable: true,\n         value_area:900,\n        size:{\n          value:5,\n          random:true\n        }\n       }\n    }\n  }}\n  \n  const initialState = {\n    input: '',\n    imageUrl: '',\n    box:{},\n    route: 'signIn',\n    isSignedIn: false,\n    user: {\n           id: '',\n           name: '',\n           email: '',\n           entries: 0,\n           joined: ''\n    }\n  }\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n  this.state = initialState;\n  }\n\n  loadUser=(data)=>{\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined            \n    }})\n  }\n  \n  onRouteChange = (route)=>{\n    if(route === 'signOut'){\n   this.setState(initialState)\n   \n    }else if (route === 'home'){\n   this.setState({isSignedIn:true})\n    }\n    this.setState({route: route});\n    \n  }\n\n\ncalculateFaceLocation = (data)=>{\n const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\nconst image = document.getElementById('inputimage');\nconst width = Number(image.width);\nconst height = Number(image.height);\nreturn {\n  leftCol: clarifaiFace.left_col * width,\n  topRow: clarifaiFace.top_row * height,\n  rightCol: width - (clarifaiFace.right_col * width),\n  bottomRow: height - (clarifaiFace.bottom_row * height)\n }\n}\n\ndisplaFaceBox =(box)=>{\nthis.setState({box: box});\n}\n\n  onInputChange =(event) => {\n  this.setState({input:event.target.value});\n  }\n\n\n  onSubmitButton= ()=>{\n    this.setState({imageUrl:this.state.input})\n\n    app.models\n    .predict(Clarifai.FACE_DETECT_MODEL, \n     this.state.input)\n    .then(response=>{\n      if(response){\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers:{'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id:this.state.user.id\n          })\n        }) \n        .then(response => response.json())\n        .then(count => {\n        this.setState(Object.assign(this.state.user, {entries: count}))\n      })\n    }\n      this.displaFaceBox(this.calculateFaceLocation(response))\n    })\n  .catch(err=> console.log(err,'Oooooops try again'))\n  }\n\n  render() {\n    const { isSignedIn,imageUrl,route, box } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n        params={particlesOptions} \n        />\n         <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n\n        {route === 'home' ?\n          <div>\n          <Logo />\n          <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n          <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onSubmitButton={this.onSubmitButton} />\n           <FaceRecognition box={box} imageUrl={imageUrl}/>\n\n           </div>\n           :( route === 'signIn' ?\n           <SignIn onRouteChange= {this.onRouteChange} loadUser={this.loadUser}/>\n            :<Register onRouteChange= {this.onRouteChange} loadUser={this.loadUser} />\n           )     \n        }\n      </div>\n    );\n  }\n} \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}